"use strict";(self.webpackChunkeliza_docs=self.webpackChunkeliza_docs||[]).push([[7396],{9936:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>h,frontMatter:()=>t,metadata:()=>a,toc:()=>l});var s=r(4848),i=r(8453);const t={},c="Secrets Management",a={id:"guides/secrets-management",title:"Secrets Management",description:"Overview",source:"@site/docs/guides/secrets-management.md",sourceDirName:"guides",slug:"/guides/secrets-management",permalink:"/eliza/docs/guides/secrets-management",draft:!1,unlisted:!1,editUrl:"https://github.com/ai16z/eliza/tree/main/docs/docs/guides/secrets-management.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Advanced Usage",permalink:"/eliza/docs/guides/advanced"},next:{title:"Local Development",permalink:"/eliza/docs/guides/local-development"}},o={},l=[{value:"Overview",id:"overview",level:2},{value:"Environment Variables",id:"environment-variables",level:2},{value:"Basic Setup",id:"basic-setup",level:3},{value:"Character-Specific Secrets",id:"character-specific-secrets",level:2},{value:"Configuration in Character Files",id:"configuration-in-character-files",level:3},{value:"Precedence Order",id:"precedence-order",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"1. Secret Storage",id:"1-secret-storage",level:3},{value:"2. Development Workflow",id:"2-development-workflow",level:3},{value:"3. Secret Rotation",id:"3-secret-rotation",level:3},{value:"4. Secure Character Files",id:"4-secure-character-files",level:3},{value:"Security Considerations",id:"security-considerations",level:2},{value:"1. Access Control",id:"1-access-control",level:3},{value:"2. Encryption at Rest",id:"2-encryption-at-rest",level:3},{value:"3. Secret Validation",id:"3-secret-validation",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Common Issues",id:"common-issues",level:3},{value:"Related Resources",id:"related-resources",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"secrets-management",children:"Secrets Management"})}),"\n",(0,s.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,s.jsx)(n.p,{children:"Eliza provides multiple options for managing secrets and credentials, including environment variables and character-specific secrets. This guide covers best practices for managing API keys, tokens, and other sensitive configuration values across different deployment scenarios."}),"\n",(0,s.jsx)(n.h2,{id:"environment-variables",children:"Environment Variables"}),"\n",(0,s.jsx)(n.h3,{id:"basic-setup",children:"Basic Setup"}),"\n",(0,s.jsxs)(n.p,{children:["Create a ",(0,s.jsx)(n.code,{children:".env"})," file in your project root:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Core API Keys\nOPENAI_API_KEY=sk-your-key\nANTHROPIC_API_KEY=your-key\nELEVENLABS_XI_API_KEY=your-key\n\n# Discord Configuration\nDISCORD_APPLICATION_ID=your-app-id\nDISCORD_API_TOKEN=your-bot-token\n\n# Twitter Configuration\nTWITTER_USERNAME=your-username\nTWITTER_PASSWORD=your-password\nTWITTER_EMAIL=your-email\nTWITTER_COOKIES=your-cookies\n\n# Database Configuration (Optional)\nSUPABASE_URL=your-supabase-url\nSUPABASE_SERVICE_API_KEY=your-service-key\n\n# Voice Settings (Optional)\nELEVENLABS_MODEL_ID=eleven_multilingual_v2\nELEVENLABS_VOICE_ID=21m00Tcm4TlvDq8ikWAM\nELEVENLABS_VOICE_STABILITY=0.5\nELEVENLABS_VOICE_SIMILARITY_BOOST=0.9\nELEVENLABS_VOICE_STYLE=0.66\nELEVENLABS_VOICE_USE_SPEAKER_BOOST=false\nELEVENLABS_OPTIMIZE_STREAMING_LATENCY=4\nELEVENLABS_OUTPUT_FORMAT=pcm_16000\n"})}),"\n",(0,s.jsx)(n.h2,{id:"character-specific-secrets",children:"Character-Specific Secrets"}),"\n",(0,s.jsx)(n.h3,{id:"configuration-in-character-files",children:"Configuration in Character Files"}),"\n",(0,s.jsx)(n.p,{children:"Character files can include their own secrets, which override environment variables:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "name": "AgentName",\n  "clients": ["discord", "twitter"],\n  "modelProvider": "openai",\n  "settings": {\n    "secrets": {\n      "OPENAI_API_KEY": "character-specific-key",\n      "DISCORD_TOKEN": "bot-specific-token",\n      "TWITTER_USERNAME": "bot-twitter-handle",\n      "TWITTER_PASSWORD": "bot-twitter-password"\n    }\n  }\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"precedence-order",children:"Precedence Order"}),"\n",(0,s.jsx)(n.p,{children:"Secrets are resolved in the following order:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Character-specific secrets (highest priority)"}),"\n",(0,s.jsx)(n.li,{children:"Environment variables"}),"\n",(0,s.jsx)(n.li,{children:"Default values (lowest priority)"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,s.jsx)(n.h3,{id:"1-secret-storage",children:"1. Secret Storage"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Never commit secret files to version control"}),"\n",(0,s.jsxs)(n.li,{children:["Use ",(0,s.jsx)(n.code,{children:".gitignore"})," to exclude sensitive files:"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# .gitignore\n.env\n.env.*\ncharacters/**/secrets.json\n**/serviceAccount.json\n"})}),"\n",(0,s.jsx)(n.h3,{id:"2-development-workflow",children:"2. Development Workflow"}),"\n",(0,s.jsx)(n.p,{children:"Create different environment files for different environments:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:".env.development    # Local development settings\n.env.staging       # Staging environment\n.env.production    # Production settings\n"})}),"\n",(0,s.jsx)(n.h3,{id:"3-secret-rotation",children:"3. Secret Rotation"}),"\n",(0,s.jsx)(n.p,{children:"Implement a rotation strategy:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"class SecretManager {\n  private static readonly SECRET_LIFETIME = 90 * 24 * 60 * 60 * 1000; // 90 days\n\n  async shouldRotateSecret(secretName: string): Promise<boolean> {\n    const lastRotation = await this.getLastRotation(secretName);\n    return Date.now() - lastRotation > SecretManager.SECRET_LIFETIME;\n  }\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"4-secure-character-files",children:"4. Secure Character Files"}),"\n",(0,s.jsx)(n.p,{children:"When using character-specific secrets:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"// Validate character file location\nconst isSecurePath = (path: string): boolean => {\n  return !path.includes('../') && !path.startsWith('/');\n};\n\n// Load character securely\nconst loadCharacter = async (path: string) => {\n  if (!isSecurePath(path)) {\n    throw new Error('Invalid character file path');\n  }\n  // Load and validate character\n};\n"})}),"\n",(0,s.jsx)(n.h2,{id:"security-considerations",children:"Security Considerations"}),"\n",(0,s.jsx)(n.h3,{id:"1-access-control",children:"1. Access Control"}),"\n",(0,s.jsx)(n.p,{children:"Implement proper access controls for secret management:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"class SecretAccess {\n  private static readonly ALLOWED_KEYS = [\n    'OPENAI_API_KEY',\n    'DISCORD_TOKEN',\n    // ... other allowed keys\n  ];\n\n  static validateAccess(key: string): boolean {\n    return this.ALLOWED_KEYS.includes(key);\n  }\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"2-encryption-at-rest",children:"2. Encryption at Rest"}),"\n",(0,s.jsx)(n.p,{children:"For stored secrets:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"import { createCipheriv, createDecipheriv } from 'crypto';\n\nclass SecretEncryption {\n  static async encrypt(value: string, key: Buffer): Promise<string> {\n    const iv = crypto.randomBytes(16);\n    const cipher = createCipheriv('aes-256-gcm', key, iv);\n    // ... implementation\n  }\n\n  static async decrypt(encrypted: string, key: Buffer): Promise<string> {\n    // ... implementation\n  }\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"3-secret-validation",children:"3. Secret Validation"}),"\n",(0,s.jsx)(n.p,{children:"Validate secrets before use:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"async function validateSecrets(character: Character): Promise<void> {\n  const required = ['OPENAI_API_KEY'];\n  const missing = required.filter(key => !character.settings.secrets[key]);\n  \n  if (missing.length > 0) {\n    throw new Error(`Missing required secrets: ${missing.join(', ')}`);\n  }\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,s.jsx)(n.h3,{id:"common-issues",children:"Common Issues"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Missing Secrets"})}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"if (!process.env.OPENAI_API_KEY && !character.settings.secrets.OPENAI_API_KEY) {\n  throw new Error('OpenAI API key not found in environment or character settings');\n}\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"2",children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Invalid Secret Format"})}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"function validateApiKey(key: string): boolean {\n  // OpenAI keys start with 'sk-'\n  if (key.startsWith('sk-')) {\n    return key.length > 20;\n  }\n  return false;\n}\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"3",children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Secret Loading Errors"})}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"try {\n  await loadSecrets();\n} catch (error) {\n  if (error.code === 'ENOENT') {\n    console.error('Environment file not found');\n  } else if (error instanceof ValidationError) {\n    console.error('Invalid secret format');\n  }\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"related-resources",children:"Related Resources"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/eliza/docs/guides/configuration",children:"Configuration Guide"})," for general configuration options"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/eliza/docs/core/characterfile",children:"Character Files"})," for character-specific settings"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/eliza/docs/guides/local-development",children:"Local Development"})," for development environment setup"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Remember to follow security best practices and never expose sensitive credentials in logs, error messages, or version control systems."})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>c,x:()=>a});var s=r(6540);const i={},t=s.createContext(i);function c(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);