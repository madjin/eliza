"use strict";(self.webpackChunkeliza_docs=self.webpackChunkeliza_docs||[]).push([[2536],{2429:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var r=i(4848),t=i(8453);const s={},a="Configuration Guide",o={id:"guides/configuration",title:"Configuration Guide",description:"Overview",source:"@site/docs/guides/configuration.md",sourceDirName:"guides",slug:"/guides/configuration",permalink:"/eliza/docs/guides/configuration",draft:!1,unlisted:!1,editUrl:"https://github.com/ai16z/eliza/tree/main/docs/docs/guides/configuration.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Basic Usage Guide",permalink:"/eliza/docs/guides/basic-usage"},next:{title:"advanced",permalink:"/eliza/docs/guides/advanced"}},l={},c=[{value:"Overview",id:"overview",level:2},{value:"Key Components",id:"key-components",level:2},{value:"1. Environment Setup",id:"1-environment-setup",level:3},{value:"2. Character Configuration",id:"2-character-configuration",level:3},{value:"3. Custom Actions",id:"3-custom-actions",level:3},{value:"Usage Guide",id:"usage-guide",level:2},{value:"1. Basic Setup",id:"1-basic-setup",level:3},{value:"2. Running Multiple Characters",id:"2-running-multiple-characters",level:3},{value:"3. Client Configuration",id:"3-client-configuration",level:3},{value:"Configuration Options",id:"configuration-options",level:2},{value:"1. Model Providers",id:"1-model-providers",level:3},{value:"2. Database Options",id:"2-database-options",level:3},{value:"3. Custom Provider Configuration",id:"3-custom-provider-configuration",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"1. Security",id:"1-security",level:3},{value:"2. Character Configuration",id:"2-character-configuration-1",level:3},{value:"3. Performance",id:"3-performance",level:3},{value:"4. Error Handling",id:"4-error-handling",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Common Issues",id:"common-issues",level:3},{value:"Next Steps",id:"next-steps",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"configuration-guide",children:"Configuration Guide"})}),"\n",(0,r.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsx)(n.p,{children:"The framework provides multiple layers of configuration to customize agent behavior, system settings, and runtime environments. This guide covers all configuration aspects: character files, environment variables, action configuration, and runtime settings."}),"\n",(0,r.jsx)(n.h2,{id:"key-components",children:"Key Components"}),"\n",(0,r.jsx)(n.h3,{id:"1-environment-setup",children:"1. Environment Setup"}),"\n",(0,r.jsxs)(n.p,{children:["Create a ",(0,r.jsx)(n.code,{children:".env"})," file in your project root:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Model API Keys\nOPENAI_API_KEY=your-key\nCLAUDE_API_KEY=your-key\n\n# Database Configuration\nDATABASE_URL=your-db-url\nPOSTGRES_URL=your-postgres-url  # Optional, defaults to SQLite\n\n# Client-Specific Tokens\nDISCORD_API_TOKEN=your-token\nDISCORD_APPLICATION_ID=your-id\nTELEGRAM_BOT_TOKEN=your-token\nTWITTER_USERNAME=your-username\n"})}),"\n",(0,r.jsx)(n.h3,{id:"2-character-configuration",children:"2. Character Configuration"}),"\n",(0,r.jsxs)(n.p,{children:["Create character files in the ",(0,r.jsx)(n.code,{children:"characters"})," directory:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "name": "AgentName",\n  "clients": ["discord", "twitter", "telegram"],\n  "modelProvider": "openai",\n  "settings": {\n    "secrets": {\n      "OPENAI_API_KEY": "your-key"\n    },\n    "voice": {\n      "model": "en_US-male-medium"\n    }\n  },\n  "bio": ["Biography elements..."],\n  "lore": ["Character background..."],\n  "knowledge": ["Factual information..."],\n  "topics": ["Relevant topics..."],\n  "style": {\n    "all": ["Style guidelines..."],\n    "chat": ["Chat-specific style..."],\n    "post": ["Post-specific style..."]\n  }\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"3-custom-actions",children:"3. Custom Actions"}),"\n",(0,r.jsxs)(n.p,{children:["Define custom actions in ",(0,r.jsx)(n.code,{children:"elizaConfig.yaml"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"actions:\n  - name: customAction\n    path: ./actions/customAction.ts\n  - name: anotherAction\n    path: ./custom_actions/anotherAction.ts\n"})}),"\n",(0,r.jsx)(n.h2,{id:"usage-guide",children:"Usage Guide"}),"\n",(0,r.jsx)(n.h3,{id:"1-basic-setup",children:"1. Basic Setup"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { createAgentRuntime } from '@your-org/agent-framework';\nimport { SqliteDatabaseAdapter } from '@your-org/agent-framework/adapters';\n\n// Initialize runtime\nconst runtime = await createAgentRuntime({\n  character: characterConfig,\n  configPath: \"./elizaConfig.yaml\",\n  databaseAdapter: new SqliteDatabaseAdapter(\"./db.sqlite\")\n});\n"})}),"\n",(0,r.jsx)(n.h3,{id:"2-running-multiple-characters",children:"2. Running Multiple Characters"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Start with specific character file\npnpm run dev --characters=./characters/agent1.json,./characters/agent2.json\n"})}),"\n",(0,r.jsx)(n.h3,{id:"3-client-configuration",children:"3. Client Configuration"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// Discord client example\nconst discordClient = new DiscordClient(runtime);\nawait discordClient.start();\n\n// Telegram client example\nconst telegramClient = new TelegramClient(runtime, botToken);\nawait telegramClient.start();\n"})}),"\n",(0,r.jsx)(n.h2,{id:"configuration-options",children:"Configuration Options"}),"\n",(0,r.jsx)(n.h3,{id:"1-model-providers",children:"1. Model Providers"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:'const modelProviders = {\n  "openai": {\n    small: "gpt-3.5-turbo",\n    large: "gpt-4"\n  },\n  "anthropic": {\n    small: "claude-3-haiku",\n    large: "claude-3-opus"\n  },\n  "llama-cloud": {\n    small: "llama-7b",\n    large: "llama-70b"\n  }\n};\n'})}),"\n",(0,r.jsx)(n.h3,{id:"2-database-options",children:"2. Database Options"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:'// SQLite (default)\nconst dbAdapter = new SqliteDatabaseAdapter("./db.sqlite");\n\n// PostgreSQL\nconst dbAdapter = new PostgresDatabaseAdapter({\n  connectionString: process.env.POSTGRES_URL\n});\n'})}),"\n",(0,r.jsx)(n.h3,{id:"3-custom-provider-configuration",children:"3. Custom Provider Configuration"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:'// Add custom provider\nruntime.providers.push({\n  name: "customProvider",\n  get: async (runtime, message, state) => {\n    // Provider implementation\n    return data;\n  }\n});\n'})}),"\n",(0,r.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,r.jsx)(n.h3,{id:"1-security",children:"1. Security"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Store sensitive credentials in ",(0,r.jsx)(n.code,{children:".env"})," file"]}),"\n",(0,r.jsx)(n.li,{children:"Use character-specific secrets for per-agent credentials"}),"\n",(0,r.jsx)(n.li,{children:"Never commit secrets to version control"}),"\n",(0,r.jsx)(n.li,{children:"Rotate API keys regularly"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"2-character-configuration-1",children:"2. Character Configuration"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Break bio and lore into smaller chunks for variety"}),"\n",(0,r.jsx)(n.li,{children:"Use RAG (knowledge array) for factual information"}),"\n",(0,r.jsx)(n.li,{children:"Keep message examples diverse and representative"}),"\n",(0,r.jsx)(n.li,{children:"Update knowledge regularly"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"3-performance",children:"3. Performance"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// Optimize context length\nconst settings = {\n  maxContextLength: 4000,  // Adjust based on model\n  maxTokens: 1000,        // Limit response length\n  temperature: 0.7        // Adjust response randomness\n};\n"})}),"\n",(0,r.jsx)(n.h3,{id:"4-error-handling",children:"4. Error Handling"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"try {\n  const runtime = await createAgentRuntime(config);\n} catch (error) {\n  if (error.code === 'CONFIG_NOT_FOUND') {\n    console.error('Configuration file missing');\n  } else if (error.code === 'INVALID_CHARACTER') {\n    console.error('Character file validation failed');\n  }\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,r.jsx)(n.h3,{id:"common-issues",children:"Common Issues"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Missing Configuration"})}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"if (!fs.existsSync('./elizaConfig.yaml')) {\n  console.error('Missing elizaConfig.yaml - copy from example');\n}\n"})}),"\n",(0,r.jsxs)(n.ol,{start:"2",children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Invalid Character File"})}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// Validate character file\nif (!character.name || !character.bio || !character.style) {\n  throw new Error('Invalid character configuration');\n}\n"})}),"\n",(0,r.jsxs)(n.ol,{start:"3",children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Model Provider Issues"})}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// Fallback to local model\nif (!process.env.OPENAI_API_KEY) {\n  console.log('Using local model fallback');\n  runtime.modelProvider = 'llama-local';\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,r.jsx)(n.p,{children:"After basic configuration:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Configure custom actions"}),"\n",(0,r.jsx)(n.li,{children:"Set up client integrations"}),"\n",(0,r.jsx)(n.li,{children:"Customize character behavior"}),"\n",(0,r.jsx)(n.li,{children:"Optimize model settings"}),"\n",(0,r.jsx)(n.li,{children:"Implement error handling"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"For more detailed information on specific components, refer to their respective documentation sections."})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>o});var r=i(6540);const t={},s=r.createContext(t);function a(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);