"use strict";(self.webpackChunkeliza_docs=self.webpackChunkeliza_docs||[]).push([[2806],{7449:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>t,metadata:()=>l,toc:()=>d});var i=s(4848),r=s(8453);const t={sidebar_position:1,title:"Infrastructure"},a="Infrastructure",l={id:"advanced/infrastructure",title:"Infrastructure",description:"Overview",source:"@site/docs/advanced/infrastructure.md",sourceDirName:"advanced",slug:"/advanced/infrastructure",permalink:"/eliza/docs/advanced/infrastructure",draft:!1,unlisted:!1,editUrl:"https://github.com/ai16z/eliza/tree/main/docs/docs/advanced/infrastructure.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Infrastructure"},sidebar:"tutorialSidebar",previous:{title:"Fine-tuning",permalink:"/eliza/docs/advanced/fine-tuning"},next:{title:"Trust Engine",permalink:"/eliza/docs/advanced/trust-engine"}},c={},d=[{value:"Overview",id:"overview",level:2},{value:"Database Architecture",id:"database-architecture",level:2},{value:"Adapter Pattern",id:"adapter-pattern",level:3},{value:"Supported Databases",id:"supported-databases",level:3},{value:"Core Components",id:"core-components",level:2},{value:"1. Memory Storage System",id:"1-memory-storage-system",level:3},{value:"2. User Management",id:"2-user-management",level:3},{value:"3. Relationship System",id:"3-relationship-system",level:3},{value:"Security Features",id:"security-features",level:2},{value:"Row Level Security (RLS)",id:"row-level-security-rls",level:3},{value:"Authentication Integration",id:"authentication-integration",level:3},{value:"Deployment Options",id:"deployment-options",level:2},{value:"1. Cloud Deployment (Supabase)",id:"1-cloud-deployment-supabase",level:3},{value:"2. Local Deployment (SQLite)",id:"2-local-deployment-sqlite",level:3},{value:"3. In-Memory Deployment (SQL.js)",id:"3-in-memory-deployment-sqljs",level:3},{value:"Vector Search Capabilities",id:"vector-search-capabilities",level:2},{value:"Implementation Details:",id:"implementation-details",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"Performance Optimization",id:"performance-optimization",level:2},{value:"Monitoring and Maintenance",id:"monitoring-and-maintenance",level:2},{value:"Additional Resources",id:"additional-resources",level:2}];function o(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"infrastructure",children:"Infrastructure"})}),"\n",(0,i.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,i.jsx)(n.p,{children:"Eliza uses a flexible, multi-database architecture that supports different storage backends through a unified adapter interface. The system supports PostgreSQL (with Supabase), SQLite, and SQL.js, allowing for both cloud and local deployments."}),"\n",(0,i.jsx)(n.h2,{id:"database-architecture",children:"Database Architecture"}),"\n",(0,i.jsx)(n.h3,{id:"adapter-pattern",children:"Adapter Pattern"}),"\n",(0,i.jsx)(n.p,{children:"Eliza implements a database adapter pattern that provides a consistent interface across different database backends:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"// Core adapter interface implemented by all database providers\nclass DatabaseAdapter {\n  async getRoom(roomId: UUID): Promise<UUID | null>;\n  async getParticipantsForAccount(userId: UUID): Promise<Participant[]>;\n  async getMemories(params: {...}): Promise<Memory[]>;\n  // ... other interface methods\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"supported-databases",children:"Supported Databases"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"PostgreSQL/Supabase"})," (",(0,i.jsx)(n.code,{children:"PostgresDatabaseAdapter"}),")"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Full-featured cloud database with vector search capabilities"}),"\n",(0,i.jsx)(n.li,{children:"Supports real-time subscriptions"}),"\n",(0,i.jsx)(n.li,{children:"Built-in user authentication"}),"\n",(0,i.jsx)(n.li,{children:"Row-level security policies"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"SQLite"})," (",(0,i.jsx)(n.code,{children:"SqliteDatabaseAdapter"}),")"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Local filesystem storage"}),"\n",(0,i.jsx)(n.li,{children:"Vector similarity search via SQLite extensions"}),"\n",(0,i.jsx)(n.li,{children:"Suitable for edge deployments"}),"\n",(0,i.jsx)(n.li,{children:"Embedded database operations"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"SQL.js"})," (",(0,i.jsx)(n.code,{children:"SqlJsDatabaseAdapter"}),")"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"In-memory database operations"}),"\n",(0,i.jsx)(n.li,{children:"Browser-compatible"}),"\n",(0,i.jsx)(n.li,{children:"No filesystem dependencies"}),"\n",(0,i.jsx)(n.li,{children:"Ideal for testing and development"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"core-components",children:"Core Components"}),"\n",(0,i.jsx)(n.h3,{id:"1-memory-storage-system",children:"1. Memory Storage System"}),"\n",(0,i.jsx)(n.p,{children:"The memory system uses a sophisticated schema that supports:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:'CREATE TABLE memories (\n    "id" UUID PRIMARY KEY,\n    "type" TEXT NOT NULL,\n    "createdAt" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    "content" JSONB NOT NULL,\n    "embedding" vector(1536), -- Vector storage for embeddings\n    "userId" UUID,\n    "roomId" UUID,\n    "unique" BOOLEAN DEFAULT true\n);\n'})}),"\n",(0,i.jsx)(n.p,{children:"Key features:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Vector embeddings for semantic search"}),"\n",(0,i.jsxs)(n.li,{children:["Content deduplication via the ",(0,i.jsx)(n.code,{children:"unique"})," flag"]}),"\n",(0,i.jsx)(n.li,{children:"JSON storage for flexible content types"}),"\n",(0,i.jsx)(n.li,{children:"Relationship tracking through foreign keys"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"2-user-management",children:"2. User Management"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:'CREATE TABLE accounts (\n    "id" UUID PRIMARY KEY,\n    "createdAt" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    "name" TEXT,\n    "username" TEXT,\n    "email" TEXT NOT NULL,\n    "avatarUrl" TEXT,\n    "details" JSONB DEFAULT \'{}\',\n    "is_agent" BOOLEAN DEFAULT false\n);\n'})}),"\n",(0,i.jsx)(n.p,{children:"Features:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Flexible user details storage using JSONB"}),"\n",(0,i.jsx)(n.li,{children:"Agent/user differentiation"}),"\n",(0,i.jsx)(n.li,{children:"Integration with auth systems"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"3-relationship-system",children:"3. Relationship System"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:'CREATE TABLE relationships (\n    "id" UUID PRIMARY KEY,\n    "createdAt" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    "userA" UUID NOT NULL,\n    "userB" UUID NOT NULL,\n    "status" TEXT,\n    "userId" UUID NOT NULL\n);\n'})}),"\n",(0,i.jsx)(n.p,{children:"Supports:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Bi-directional relationships"}),"\n",(0,i.jsx)(n.li,{children:"Relationship status tracking"}),"\n",(0,i.jsx)(n.li,{children:"Friend recommendations"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"security-features",children:"Security Features"}),"\n",(0,i.jsx)(n.h3,{id:"row-level-security-rls",children:"Row Level Security (RLS)"}),"\n",(0,i.jsx)(n.p,{children:"PostgreSQL deployment includes comprehensive RLS policies:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:'-- Example RLS policies\nCREATE POLICY "Enable read access for all users" \nON "public"."accounts" FOR SELECT \nUSING (true);\n\nCREATE POLICY "Can select and update all data" \nON "public"."accounts" \nUSING (("auth"."uid"() = "id")) \nWITH CHECK (("auth"."uid"() = "id"));\n'})}),"\n",(0,i.jsx)(n.h3,{id:"authentication-integration",children:"Authentication Integration"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Built-in support for Supabase Auth"}),"\n",(0,i.jsx)(n.li,{children:"JWT validation"}),"\n",(0,i.jsx)(n.li,{children:"Role-based access control"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"deployment-options",children:"Deployment Options"}),"\n",(0,i.jsx)(n.h3,{id:"1-cloud-deployment-supabase",children:"1. Cloud Deployment (Supabase)"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'// Initialize cloud database\nconst supabaseAdapter = new SupabaseDatabaseAdapter(\n  "https://your-project.supabase.co",\n  "your-supabase-key"\n);\n'})}),"\n",(0,i.jsx)(n.p,{children:"Features:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Automated backups"}),"\n",(0,i.jsx)(n.li,{children:"Scalable vector operations"}),"\n",(0,i.jsx)(n.li,{children:"Real-time capabilities"}),"\n",(0,i.jsx)(n.li,{children:"Built-in monitoring"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"2-local-deployment-sqlite",children:"2. Local Deployment (SQLite)"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'// Initialize local database\nconst sqliteAdapter = new SqliteDatabaseAdapter(\n  new Database("path/to/database.db")\n);\n'})}),"\n",(0,i.jsx)(n.p,{children:"Features:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"File-based storage"}),"\n",(0,i.jsx)(n.li,{children:"Portable deployment"}),"\n",(0,i.jsx)(n.li,{children:"Low resource requirements"}),"\n",(0,i.jsx)(n.li,{children:"Embedded vector operations"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"3-in-memory-deployment-sqljs",children:"3. In-Memory Deployment (SQL.js)"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"// Initialize in-memory database\nconst sqljsAdapter = new SqlJsDatabaseAdapter(\n  new Database()\n);\n"})}),"\n",(0,i.jsx)(n.p,{children:"Features:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"No persistence requirements"}),"\n",(0,i.jsx)(n.li,{children:"Fast operations"}),"\n",(0,i.jsx)(n.li,{children:"Perfect for testing"}),"\n",(0,i.jsx)(n.li,{children:"Browser compatibility"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"vector-search-capabilities",children:"Vector Search Capabilities"}),"\n",(0,i.jsx)(n.p,{children:"All database adapters support vector operations for semantic search:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"async searchMemoriesByEmbedding(\n  embedding: number[],\n  params: {\n    match_threshold?: number;\n    count?: number;\n    roomId?: UUID;\n    unique?: boolean;\n    tableName: string;\n  }\n): Promise<Memory[]>\n"})}),"\n",(0,i.jsx)(n.h3,{id:"implementation-details",children:"Implementation Details:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"PostgreSQL: Uses pgvector extension"}),"\n",(0,i.jsx)(n.li,{children:"SQLite: Uses sqlite-vss extension"}),"\n",(0,i.jsx)(n.li,{children:"SQL.js: Uses custom vector similarity functions"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Database Selection"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Use Supabase for production deployments"}),"\n",(0,i.jsx)(n.li,{children:"Use SQLite for edge computing/local deployments"}),"\n",(0,i.jsx)(n.li,{children:"Use SQL.js for testing and browser-based applications"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Memory Management"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"// Example of proper memory handling\nasync function withConnection(fn: (client: PoolClient) => Promise<T>) {\n  const client = await pool.connect();\n  try {\n    return await fn(client);\n  } finally {\n    client.release();\n  }\n}\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Error Handling"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'try {\n  await adapter.createMemory(memory, tableName);\n} catch (error) {\n  console.error("Database error:", error);\n  // Implement proper error recovery\n}\n'})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Connection Pooling"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"const pool = new Pool({\n  max: 20,\n  idleTimeoutMillis: 30000,\n  connectionTimeoutMillis: 2000,\n});\n"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"performance-optimization",children:"Performance Optimization"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Indexing Strategy"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:'-- Essential indexes for performance\nCREATE INDEX idx_memories_embedding ON memories \nUSING hnsw ("embedding" vector_cosine_ops);\nCREATE INDEX idx_memories_type_room ON memories("type", "roomId");\n'})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Query Optimization"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'// Use parameterized queries\nconst stmt = db.prepare(\n  "SELECT * FROM memories WHERE type = ? AND roomId = ?"\n);\n'})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Caching"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Implement memory caching for frequently accessed data"}),"\n",(0,i.jsx)(n.li,{children:"Use embedding caching for similar queries"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"monitoring-and-maintenance",children:"Monitoring and Maintenance"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Health Checks"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'async testConnection(): Promise<boolean> {\n  const result = await client.query("SELECT NOW()");\n  return !!result.rows[0];\n}\n'})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Logging"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"// Implement comprehensive logging\nconst loggingAdapter = createLoggingDatabaseAdapter(baseAdapter);\n"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"additional-resources",children:"Additional Resources"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://www.postgresql.org/docs/",children:"PostgreSQL Documentation"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://www.sqlite.org/docs.html",children:"SQLite Documentation"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://supabase.com/docs",children:"Supabase Documentation"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://supabase.com/docs/guides/database/extensions/pgvector",children:"Vector Search Guide"})}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"For deployment-specific configurations and advanced setup options, refer to the respective database documentation."})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>l});var i=s(6540);const r={},t=i.createContext(r);function a(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);