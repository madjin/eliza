"use strict";(self.webpackChunkeliza_docs=self.webpackChunkeliza_docs||[]).push([[896],{1319:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>t,default:()=>h,frontMatter:()=>s,metadata:()=>c,toc:()=>a});var l=i(4848),r=i(8453);const s={sidebar_position:2},t="Agents",c={id:"core/agents",title:"Agents",description:"Agents are the core components of the Eliza framework that handle autonomous interactions. Each agent runs in a runtime environment and can interact through various clients (Discord, Telegram, etc.) while maintaining consistent behavior and memory.",source:"@site/docs/core/agents.md",sourceDirName:"core",slug:"/core/agents",permalink:"/eliza/docs/core/agents",draft:!1,unlisted:!1,editUrl:"https://github.com/ai16z/eliza/tree/main/docs/docs/core/agents.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Character Files",permalink:"/eliza/docs/core/characterfile"},next:{title:"Providers",permalink:"/eliza/docs/core/providers"}},o={},a=[{value:"Overview",id:"overview",level:2},{value:"Architecture",id:"architecture",level:2},{value:"Agent Runtime",id:"agent-runtime",level:3},{value:"Key Components",id:"key-components",level:3},{value:"1. Clients",id:"1-clients",level:4},{value:"2. Providers",id:"2-providers",level:4},{value:"3. Actions",id:"3-actions",level:4},{value:"4. Evaluators",id:"4-evaluators",level:4},{value:"Memory System",id:"memory-system",level:3},{value:"Types of Memory",id:"types-of-memory",level:4},{value:"RAG Integration",id:"rag-integration",level:4},{value:"Configuration",id:"configuration",level:2},{value:"Best Practices",id:"best-practices",level:2},{value:"Performance",id:"performance",level:3},{value:"Development",id:"development",level:3},{value:"Scaling",id:"scaling",level:3},{value:"Examples",id:"examples",level:2},{value:"Basic Agent Setup",id:"basic-agent-setup",level:3},{value:"Adding Custom Functionality",id:"adding-custom-functionality",level:3},{value:"Client Integration",id:"client-integration",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Related",id:"related",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"agents",children:"Agents"})}),"\n",(0,l.jsx)(n.p,{children:"Agents are the core components of the Eliza framework that handle autonomous interactions. Each agent runs in a runtime environment and can interact through various clients (Discord, Telegram, etc.) while maintaining consistent behavior and memory."}),"\n",(0,l.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"What agents are in Eliza"}),"\n",(0,l.jsx)(n.li,{children:"How they interact with the system"}),"\n",(0,l.jsx)(n.li,{children:"Core components and workflow"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"architecture",children:"Architecture"}),"\n",(0,l.jsx)(n.h3,{id:"agent-runtime",children:"Agent Runtime"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Base environment for the agent"}),"\n",(0,l.jsx)(n.li,{children:"Message processing"}),"\n",(0,l.jsx)(n.li,{children:"Action handling"}),"\n",(0,l.jsx)(n.li,{children:"Provider integration"}),"\n",(0,l.jsx)(n.li,{children:"Memory management"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"key-components",children:"Key Components"}),"\n",(0,l.jsx)(n.h4,{id:"1-clients",children:"1. Clients"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Discord"}),"\n",(0,l.jsx)(n.li,{children:"Telegram"}),"\n",(0,l.jsx)(n.li,{children:"Direct (REST API)"}),"\n",(0,l.jsx)(n.li,{children:"Available connectors"}),"\n",(0,l.jsx)(n.li,{children:"Client-specific features (e.g., voice, attachments)"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"2-providers",children:"2. Providers"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Inject context into agent responses"}),"\n",(0,l.jsxs)(n.li,{children:["Types of providers:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Time"}),"\n",(0,l.jsx)(n.li,{children:"Wallet"}),"\n",(0,l.jsx)(n.li,{children:"Custom data/state"}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.li,{children:"How to use providers for extended functionality"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"3-actions",children:"3. Actions"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Executable behaviors"}),"\n",(0,l.jsxs)(n.li,{children:["Built-in actions:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Follow/unfollow rooms"}),"\n",(0,l.jsx)(n.li,{children:"Generate images"}),"\n",(0,l.jsx)(n.li,{children:"Transcribe media"}),"\n",(0,l.jsx)(n.li,{children:"Process attachments"}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.li,{children:"Creating custom actions"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"4-evaluators",children:"4. Evaluators"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Response assessment"}),"\n",(0,l.jsx)(n.li,{children:"Goal tracking"}),"\n",(0,l.jsx)(n.li,{children:"Fact extraction"}),"\n",(0,l.jsx)(n.li,{children:"Memory building"}),"\n",(0,l.jsx)(n.li,{children:"Long-term memory management"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"memory-system",children:"Memory System"}),"\n",(0,l.jsx)(n.h4,{id:"types-of-memory",children:"Types of Memory"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Message history"}),"\n",(0,l.jsx)(n.li,{children:"Factual memory"}),"\n",(0,l.jsx)(n.li,{children:"Knowledge base"}),"\n",(0,l.jsx)(n.li,{children:"Relationship tracking"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"rag-integration",children:"RAG Integration"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Vector search for relevant information"}),"\n",(0,l.jsx)(n.li,{children:"Knowledge embedding"}),"\n",(0,l.jsx)(n.li,{children:"Contextual recall"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Model settings"}),"\n",(0,l.jsx)(n.li,{children:"Runtime options"}),"\n",(0,l.jsx)(n.li,{children:"Client configuration"}),"\n",(0,l.jsx)(n.li,{children:"Memory settings"}),"\n",(0,l.jsx)(n.li,{children:"Provider setup"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,l.jsx)(n.h3,{id:"performance",children:"Performance"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Model selection"}),"\n",(0,l.jsx)(n.li,{children:"Context management"}),"\n",(0,l.jsx)(n.li,{children:"Memory optimization"}),"\n",(0,l.jsx)(n.li,{children:"Client-specific considerations"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"development",children:"Development"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Local development setup"}),"\n",(0,l.jsx)(n.li,{children:"Testing agents"}),"\n",(0,l.jsx)(n.li,{children:"Debugging tools"}),"\n",(0,l.jsx)(n.li,{children:"Monitoring and logging"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"scaling",children:"Scaling"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Multiple agent management"}),"\n",(0,l.jsx)(n.li,{children:"Resource considerations"}),"\n",(0,l.jsx)(n.li,{children:"Infrastructure recommendations"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,l.jsx)(n.h3,{id:"basic-agent-setup",children:"Basic Agent Setup"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"// Example code for basic agent configuration\n"})}),"\n",(0,l.jsx)(n.h3,{id:"adding-custom-functionality",children:"Adding Custom Functionality"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"// Example of extending agent capabilities\n"})}),"\n",(0,l.jsx)(n.h3,{id:"client-integration",children:"Client Integration"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"// Example of connecting to different platforms\n"})}),"\n",(0,l.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Common issues"}),"\n",(0,l.jsx)(n.li,{children:"Debug strategies"}),"\n",(0,l.jsx)(n.li,{children:"Performance optimization"}),"\n",(0,l.jsx)(n.li,{children:"Error handling"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"related",children:"Related"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"../characterfile",children:"Character Files"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"/api/classes/AgentRuntime",children:"API Reference"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>c});var l=i(6540);const r={},s=l.createContext(r);function t(e){const n=l.useContext(s);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),l.createElement(s.Provider,{value:n},e.children)}}}]);