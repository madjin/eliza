"use strict";(self.webpackChunkeliza_docs=self.webpackChunkeliza_docs||[]).push([[5892],{7977:e=>{e.exports=JSON.parse('{"version":{"pluginId":"api","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"apiSidebar":[{"type":"category","label":"API","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Exports","href":"/eliza/api/docs/modules","docId":"docs/modules","unlisted":false}],"href":"/eliza/api/docs/"},{"type":"link","label":"Readme","href":"/eliza/api/","docId":"index","unlisted":false},{"type":"link","label":"Exports","href":"/eliza/api/modules","docId":"modules","unlisted":false},{"type":"category","label":"Enumerations","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"GoalStatus","href":"/eliza/api/enums/GoalStatus","docId":"enums/GoalStatus","unlisted":false}]},{"type":"category","label":"Classes","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"AgentRuntime","href":"/eliza/api/classes/AgentRuntime","docId":"classes/AgentRuntime","unlisted":false},{"type":"link","label":"DatabaseAdapter","href":"/eliza/api/classes/DatabaseAdapter","docId":"classes/DatabaseAdapter","unlisted":false},{"type":"link","label":"MemoryManager","href":"/eliza/api/classes/MemoryManager","docId":"classes/MemoryManager","unlisted":false},{"type":"link","label":"SqlJsDatabaseAdapter","href":"/eliza/api/classes/SqlJsDatabaseAdapter","docId":"classes/SqlJsDatabaseAdapter","unlisted":false},{"type":"link","label":"SqliteDatabaseAdapter","href":"/eliza/api/classes/SqliteDatabaseAdapter","docId":"classes/SqliteDatabaseAdapter","unlisted":false},{"type":"link","label":"SupabaseDatabaseAdapter","href":"/eliza/api/classes/SupabaseDatabaseAdapter","docId":"classes/SupabaseDatabaseAdapter","unlisted":false}]},{"type":"category","label":"Interfaces","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Account","href":"/eliza/api/interfaces/Account","docId":"interfaces/Account","unlisted":false},{"type":"link","label":"Action","href":"/eliza/api/interfaces/Action","docId":"interfaces/Action","unlisted":false},{"type":"link","label":"ActionExample","href":"/eliza/api/interfaces/ActionExample","docId":"interfaces/ActionExample","unlisted":false},{"type":"link","label":"Actor","href":"/eliza/api/interfaces/Actor","docId":"interfaces/Actor","unlisted":false},{"type":"link","label":"Content","href":"/eliza/api/interfaces/Content","docId":"interfaces/Content","unlisted":false},{"type":"link","label":"ConversationExample","href":"/eliza/api/interfaces/ConversationExample","docId":"interfaces/ConversationExample","unlisted":false},{"type":"link","label":"EvaluationExample","href":"/eliza/api/interfaces/EvaluationExample","docId":"interfaces/EvaluationExample","unlisted":false},{"type":"link","label":"Evaluator","href":"/eliza/api/interfaces/Evaluator","docId":"interfaces/Evaluator","unlisted":false},{"type":"link","label":"Goal","href":"/eliza/api/interfaces/Goal","docId":"interfaces/Goal","unlisted":false},{"type":"link","label":"Memory","href":"/eliza/api/interfaces/Memory","docId":"interfaces/Memory","unlisted":false},{"type":"link","label":"Message","href":"/eliza/api/interfaces/Message","docId":"interfaces/Message","unlisted":false},{"type":"link","label":"MessageExample","href":"/eliza/api/interfaces/MessageExample","docId":"interfaces/MessageExample","unlisted":false},{"type":"link","label":"Objective","href":"/eliza/api/interfaces/Objective","docId":"interfaces/Objective","unlisted":false},{"type":"link","label":"Participant","href":"/eliza/api/interfaces/Participant","docId":"interfaces/Participant","unlisted":false},{"type":"link","label":"Provider","href":"/eliza/api/interfaces/Provider","docId":"interfaces/Provider","unlisted":false},{"type":"link","label":"Relationship","href":"/eliza/api/interfaces/Relationship","docId":"interfaces/Relationship","unlisted":false},{"type":"link","label":"Room","href":"/eliza/api/interfaces/Room","docId":"interfaces/Room","unlisted":false},{"type":"link","label":"State","href":"/eliza/api/interfaces/State","docId":"interfaces/State","unlisted":false}]},{"type":"category","label":"Type aliases","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Handler","href":"/eliza/api/types/Handler","docId":"types/Handler","unlisted":false},{"type":"link","label":"Validator","href":"/eliza/api/types/Validator","docId":"types/Validator","unlisted":false}]},{"type":"category","label":"Variables","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"defaultActions","href":"/eliza/api/variables/defaultActions","docId":"variables/defaultActions","unlisted":false},{"type":"link","label":"defaultEvaluators","href":"/eliza/api/variables/defaultEvaluators","docId":"variables/defaultEvaluators","unlisted":false},{"type":"link","label":"defaultProviders","href":"/eliza/api/variables/defaultProviders","docId":"variables/defaultProviders","unlisted":false},{"type":"link","label":"embeddingDimension","href":"/eliza/api/variables/embeddingDimension","docId":"variables/embeddingDimension","unlisted":false},{"type":"link","label":"embeddingZeroVector","href":"/eliza/api/variables/embeddingZeroVector","docId":"variables/embeddingZeroVector","unlisted":false},{"type":"link","label":"evaluationTemplate","href":"/eliza/api/variables/evaluationTemplate","docId":"variables/evaluationTemplate","unlisted":false},{"type":"link","label":"messageHandlerTemplate","href":"/eliza/api/variables/messageHandlerTemplate","docId":"variables/messageHandlerTemplate","unlisted":false}]},{"type":"category","label":"Functions","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"addHeader","href":"/eliza/api/functions/addHeader","docId":"functions/addHeader","unlisted":false},{"type":"link","label":"addLore","href":"/eliza/api/functions/addLore","docId":"functions/addLore","unlisted":false},{"type":"link","label":"composeActionExamples","href":"/eliza/api/functions/composeActionExamples","docId":"functions/composeActionExamples","unlisted":false},{"type":"link","label":"composeContext","href":"/eliza/api/functions/composeContext","docId":"functions/composeContext","unlisted":false},{"type":"link","label":"createGoal","href":"/eliza/api/functions/createGoal","docId":"functions/createGoal","unlisted":false},{"type":"link","label":"createRelationship","href":"/eliza/api/functions/createRelationship","docId":"functions/createRelationship","unlisted":false},{"type":"link","label":"formatActionConditions","href":"/eliza/api/functions/formatActionConditions","docId":"functions/formatActionConditions","unlisted":false},{"type":"link","label":"formatActionNames","href":"/eliza/api/functions/formatActionNames","docId":"functions/formatActionNames","unlisted":false},{"type":"link","label":"formatActions","href":"/eliza/api/functions/formatActions","docId":"functions/formatActions","unlisted":false},{"type":"link","label":"formatActors","href":"/eliza/api/functions/formatActors","docId":"functions/formatActors","unlisted":false},{"type":"link","label":"formatEvaluatorConditions","href":"/eliza/api/functions/formatEvaluatorConditions","docId":"functions/formatEvaluatorConditions","unlisted":false},{"type":"link","label":"formatEvaluatorExampleConditions","href":"/eliza/api/functions/formatEvaluatorExampleConditions","docId":"functions/formatEvaluatorExampleConditions","unlisted":false},{"type":"link","label":"formatEvaluatorExampleDescriptions","href":"/eliza/api/functions/formatEvaluatorExampleDescriptions","docId":"functions/formatEvaluatorExampleDescriptions","unlisted":false},{"type":"link","label":"formatEvaluatorExamples","href":"/eliza/api/functions/formatEvaluatorExamples","docId":"functions/formatEvaluatorExamples","unlisted":false},{"type":"link","label":"formatEvaluatorNames","href":"/eliza/api/functions/formatEvaluatorNames","docId":"functions/formatEvaluatorNames","unlisted":false},{"type":"link","label":"formatEvaluators","href":"/eliza/api/functions/formatEvaluators","docId":"functions/formatEvaluators","unlisted":false},{"type":"link","label":"formatGoalsAsString","href":"/eliza/api/functions/formatGoalsAsString","docId":"functions/formatGoalsAsString","unlisted":false},{"type":"link","label":"formatLore","href":"/eliza/api/functions/formatLore","docId":"functions/formatLore","unlisted":false},{"type":"link","label":"formatMessages","href":"/eliza/api/functions/formatMessages","docId":"functions/formatMessages","unlisted":false},{"type":"link","label":"formatRelationships","href":"/eliza/api/functions/formatRelationships","docId":"functions/formatRelationships","unlisted":false},{"type":"link","label":"getActorDetails","href":"/eliza/api/functions/getActorDetails","docId":"functions/getActorDetails","unlisted":false},{"type":"link","label":"getFormattedActions","href":"/eliza/api/functions/getFormattedActions","docId":"functions/getFormattedActions","unlisted":false},{"type":"link","label":"getGoals","href":"/eliza/api/functions/getGoals","docId":"functions/getGoals","unlisted":false},{"type":"link","label":"getLore","href":"/eliza/api/functions/getLore","docId":"functions/getLore","unlisted":false},{"type":"link","label":"getProviders","href":"/eliza/api/functions/getProviders","docId":"functions/getProviders","unlisted":false},{"type":"link","label":"getRelationship","href":"/eliza/api/functions/getRelationship","docId":"functions/getRelationship","unlisted":false},{"type":"link","label":"getRelationships","href":"/eliza/api/functions/getRelationships","docId":"functions/getRelationships","unlisted":false},{"type":"link","label":"parseJSONObjectFromText","href":"/eliza/api/functions/parseJSONObjectFromText","docId":"functions/parseJSONObjectFromText","unlisted":false},{"type":"link","label":"parseJsonArrayFromText","href":"/eliza/api/functions/parseJsonArrayFromText","docId":"functions/parseJsonArrayFromText","unlisted":false},{"type":"link","label":"updateGoal","href":"/eliza/api/functions/updateGoal","docId":"functions/updateGoal","unlisted":false}]},{"type":"link","label":"Key Concepts in Eliza","href":"/eliza/api/concepts","docId":"concepts","unlisted":false},{"type":"category","label":"guides","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"advanced","href":"/eliza/api/guides/advanced","docId":"guides/advanced","unlisted":false},{"type":"link","label":"basic-usage","href":"/eliza/api/guides/basic-usage","docId":"guides/basic-usage","unlisted":false},{"type":"link","label":"configuration","href":"/eliza/api/guides/configuration","docId":"guides/configuration","unlisted":false}]},{"type":"link","label":"installation","href":"/eliza/api/installation","docId":"installation","unlisted":false},{"type":"link","label":"intro","href":"/eliza/api/intro","docId":"intro","unlisted":false},{"type":"link","label":"quickstart","href":"/eliza/api/quickstart","docId":"quickstart","unlisted":false},{"type":"link","label":"Room Model","href":"/eliza/api/rooms","docId":"rooms","unlisted":false}]},"docs":{"classes/AgentRuntime":{"id":"classes/AgentRuntime","title":"Class: AgentRuntime","description":"Represents the runtime environment for an agent, handling message processing,","sidebar":"apiSidebar"},"classes/DatabaseAdapter":{"id":"classes/DatabaseAdapter","title":"Class: DatabaseAdapter","description":"An abstract class representing a database adapter for managing various entities","sidebar":"apiSidebar"},"classes/MemoryManager":{"id":"classes/MemoryManager","title":"Class: MemoryManager","description":"Manage memories in the database.","sidebar":"apiSidebar"},"classes/SqliteDatabaseAdapter":{"id":"classes/SqliteDatabaseAdapter","title":"Class: SqliteDatabaseAdapter","description":"An abstract class representing a database adapter for managing various entities","sidebar":"apiSidebar"},"classes/SqlJsDatabaseAdapter":{"id":"classes/SqlJsDatabaseAdapter","title":"Class: SqlJsDatabaseAdapter","description":"An abstract class representing a database adapter for managing various entities","sidebar":"apiSidebar"},"classes/SupabaseDatabaseAdapter":{"id":"classes/SupabaseDatabaseAdapter","title":"Class: SupabaseDatabaseAdapter","description":"An abstract class representing a database adapter for managing various entities","sidebar":"apiSidebar"},"concepts":{"id":"concepts","title":"Key Concepts in Eliza","description":"Eliza is a comprehensive and flexible framework for building intelligent agents. It provides a set of tools and abstractions that enable developers to create sophisticated agents tailored to their specific needs. The following concepts are the building blocks of eliza and form the foundation for understanding and working with the framework.","sidebar":"apiSidebar"},"docs/index":{"id":"docs/index","title":"eliza","description":"As seen powering @DegenSpartanAI and @MarcAIndreessen","sidebar":"apiSidebar"},"docs/modules":{"id":"docs/modules","title":"eliza","description":"","sidebar":"apiSidebar"},"enums/GoalStatus":{"id":"enums/GoalStatus","title":"Enumeration: GoalStatus","description":"Enumeration Members","sidebar":"apiSidebar"},"functions/addHeader":{"id":"functions/addHeader","title":"Function: addHeader","description":"\u25b8 addHeader(header, body): string","sidebar":"apiSidebar"},"functions/addLore":{"id":"functions/addLore","title":"Function: addLore","description":"\u25b8 addLore(params): Promise\\\\","sidebar":"apiSidebar"},"functions/composeActionExamples":{"id":"functions/composeActionExamples","title":"Function: composeActionExamples","description":"\u25b8 composeActionExamples(actionsData, count): string","sidebar":"apiSidebar"},"functions/composeContext":{"id":"functions/composeContext","title":"Function: composeContext","description":"\u25b8 composeContext(params): string","sidebar":"apiSidebar"},"functions/createGoal":{"id":"functions/createGoal","title":"Function: createGoal","description":"\u25b8 createGoal(\xabdestructured\xbb): Promise\\\\","sidebar":"apiSidebar"},"functions/createRelationship":{"id":"functions/createRelationship","title":"Function: createRelationship","description":"\u25b8 createRelationship(\xabdestructured\xbb): Promise\\\\","sidebar":"apiSidebar"},"functions/formatActionConditions":{"id":"functions/formatActionConditions","title":"Function: formatActionConditions","description":"\u25b8 formatActionConditions(actions): string","sidebar":"apiSidebar"},"functions/formatActionNames":{"id":"functions/formatActionNames","title":"Function: formatActionNames","description":"\u25b8 formatActionNames(actions): string","sidebar":"apiSidebar"},"functions/formatActions":{"id":"functions/formatActions","title":"Function: formatActions","description":"\u25b8 formatActions(actions): string","sidebar":"apiSidebar"},"functions/formatActors":{"id":"functions/formatActors","title":"Function: formatActors","description":"\u25b8 formatActors(actors): string","sidebar":"apiSidebar"},"functions/formatEvaluatorConditions":{"id":"functions/formatEvaluatorConditions","title":"Function: formatEvaluatorConditions","description":"\u25b8 formatEvaluatorConditions(evaluators): string","sidebar":"apiSidebar"},"functions/formatEvaluatorExampleConditions":{"id":"functions/formatEvaluatorExampleConditions","title":"Function: formatEvaluatorExampleConditions","description":"\u25b8 formatEvaluatorExampleConditions(evaluators): string","sidebar":"apiSidebar"},"functions/formatEvaluatorExampleDescriptions":{"id":"functions/formatEvaluatorExampleDescriptions","title":"Function: formatEvaluatorExampleDescriptions","description":"\u25b8 formatEvaluatorExampleDescriptions(evaluators): string","sidebar":"apiSidebar"},"functions/formatEvaluatorExamples":{"id":"functions/formatEvaluatorExamples","title":"Function: formatEvaluatorExamples","description":"\u25b8 formatEvaluatorExamples(evaluators): string","sidebar":"apiSidebar"},"functions/formatEvaluatorNames":{"id":"functions/formatEvaluatorNames","title":"Function: formatEvaluatorNames","description":"\u25b8 formatEvaluatorNames(evaluators): string","sidebar":"apiSidebar"},"functions/formatEvaluators":{"id":"functions/formatEvaluators","title":"Function: formatEvaluators","description":"\u25b8 formatEvaluators(evaluators): string","sidebar":"apiSidebar"},"functions/formatGoalsAsString":{"id":"functions/formatGoalsAsString","title":"Function: formatGoalsAsString","description":"\u25b8 formatGoalsAsString(\xabdestructured\xbb): string","sidebar":"apiSidebar"},"functions/formatLore":{"id":"functions/formatLore","title":"Function: formatLore","description":"\u25b8 formatLore(lore): string","sidebar":"apiSidebar"},"functions/formatMessages":{"id":"functions/formatMessages","title":"Function: formatMessages","description":"\u25b8 formatMessages(\xabdestructured\xbb): string","sidebar":"apiSidebar"},"functions/formatRelationships":{"id":"functions/formatRelationships","title":"Function: formatRelationships","description":"\u25b8 formatRelationships(\xabdestructured\xbb): Promise\\\\","sidebar":"apiSidebar"},"functions/getActorDetails":{"id":"functions/getActorDetails","title":"Function: getActorDetails","description":"\u25b8 getActorDetails(\xabdestructured\xbb): Promise\\\\","sidebar":"apiSidebar"},"functions/getFormattedActions":{"id":"functions/getFormattedActions","title":"Function: getFormattedActions","description":"\u25b8 getFormattedActions(actions): string","sidebar":"apiSidebar"},"functions/getGoals":{"id":"functions/getGoals","title":"Function: getGoals","description":"\u25b8 getGoals(\xabdestructured\xbb): Promise\\\\","sidebar":"apiSidebar"},"functions/getLore":{"id":"functions/getLore","title":"Function: getLore","description":"\u25b8 getLore(params): Promise\\\\","sidebar":"apiSidebar"},"functions/getProviders":{"id":"functions/getProviders","title":"Function: getProviders","description":"\u25b8 getProviders(runtime, message, state?): Promise\\\\","sidebar":"apiSidebar"},"functions/getRelationship":{"id":"functions/getRelationship","title":"Function: getRelationship","description":"\u25b8 getRelationship(\xabdestructured\xbb): Promise\\\\","sidebar":"apiSidebar"},"functions/getRelationships":{"id":"functions/getRelationships","title":"Function: getRelationships","description":"\u25b8 getRelationships(\xabdestructured\xbb): Promise\\\\","sidebar":"apiSidebar"},"functions/parseJsonArrayFromText":{"id":"functions/parseJsonArrayFromText","title":"Function: parseJsonArrayFromText","description":"\u25b8 parseJsonArrayFromText(text): null \\\\| any[]","sidebar":"apiSidebar"},"functions/parseJSONObjectFromText":{"id":"functions/parseJSONObjectFromText","title":"Function: parseJSONObjectFromText","description":"\u25b8 parseJSONObjectFromText(text): any","sidebar":"apiSidebar"},"functions/updateGoal":{"id":"functions/updateGoal","title":"Function: updateGoal","description":"\u25b8 updateGoal(\xabdestructured\xbb): Promise\\\\","sidebar":"apiSidebar"},"guides/advanced":{"id":"guides/advanced","title":"advanced","description":"","sidebar":"apiSidebar"},"guides/basic-usage":{"id":"guides/basic-usage","title":"basic-usage","description":"","sidebar":"apiSidebar"},"guides/configuration":{"id":"guides/configuration","title":"configuration","description":"","sidebar":"apiSidebar"},"index":{"id":"index","title":"eliza","description":"As seen powering @DegenSpartanAI and @MarcAIndreessen","sidebar":"apiSidebar"},"installation":{"id":"installation","title":"installation","description":"","sidebar":"apiSidebar"},"interfaces/Account":{"id":"interfaces/Account","title":"Interface: Account","description":"Represents a user, including their name, details, and a unique identifier.","sidebar":"apiSidebar"},"interfaces/Action":{"id":"interfaces/Action","title":"Interface: Action","description":"Represents an action that the agent can perform, including conditions for its use, a description, examples, a handler function, and a validation function.","sidebar":"apiSidebar"},"interfaces/ActionExample":{"id":"interfaces/ActionExample","title":"Interface: ActionExample","description":"Represents an example of content, typically used for demonstrating or testing purposes. Includes user, content, optional action, and optional source.","sidebar":"apiSidebar"},"interfaces/Actor":{"id":"interfaces/Actor","title":"Interface: Actor","description":"Represents an actor in the conversation, which could be a user or the agent itself, including their name, details (such as tagline, summary, and quote), and a unique identifier.","sidebar":"apiSidebar"},"interfaces/Content":{"id":"interfaces/Content","title":"Interface: Content","description":"Represents the content of a message, including its main text (content), any associated action (action), and the source of the content (source), if applicable.","sidebar":"apiSidebar"},"interfaces/ConversationExample":{"id":"interfaces/ConversationExample","title":"Interface: ConversationExample","description":"Represents an example of content, typically used for demonstrating or testing purposes. Includes user, content, optional action, and optional source.","sidebar":"apiSidebar"},"interfaces/EvaluationExample":{"id":"interfaces/EvaluationExample","title":"Interface: EvaluationExample","description":"Represents an example for evaluation, including the context, an array of message examples, and the expected outcome.","sidebar":"apiSidebar"},"interfaces/Evaluator":{"id":"interfaces/Evaluator","title":"Interface: Evaluator","description":"Represents an evaluator, which is used to assess and guide the agent\'s responses based on the current context and state.","sidebar":"apiSidebar"},"interfaces/Goal":{"id":"interfaces/Goal","title":"Interface: Goal","description":"Represents a goal, which is a higher-level aim composed of one or more objectives. Goals are tracked to measure progress or achievements within the conversation or system.","sidebar":"apiSidebar"},"interfaces/Memory":{"id":"interfaces/Memory","title":"Interface: Memory","description":"Represents a memory record, which could be a message or any other piece of information remembered by the system, including its content, associated user IDs, and optionally, its embedding vector for similarity comparisons.","sidebar":"apiSidebar"},"interfaces/Message":{"id":"interfaces/Message","title":"Interface: Message","description":"Represents a message within the conversation, including its content and associated metadata such as the sender, agent, and room IDs.","sidebar":"apiSidebar"},"interfaces/MessageExample":{"id":"interfaces/MessageExample","title":"Interface: MessageExample","description":"Represents an example of a message, typically used for demonstrating or testing purposes, including optional content and action.","sidebar":"apiSidebar"},"interfaces/Objective":{"id":"interfaces/Objective","title":"Interface: Objective","description":"Represents an objective within a goal, detailing what needs to be achieved and whether it has been completed.","sidebar":"apiSidebar"},"interfaces/Participant":{"id":"interfaces/Participant","title":"Interface: Participant","description":"Represents a participant in a room, including their ID and account details.","sidebar":"apiSidebar"},"interfaces/Provider":{"id":"interfaces/Provider","title":"Interface: Provider","description":"Represents a provider, which is used to retrieve information or perform actions on behalf of the agent, such as fetching data from an external API or service.","sidebar":"apiSidebar"},"interfaces/Relationship":{"id":"interfaces/Relationship","title":"Interface: Relationship","description":"Represents a relationship between two users, including their IDs, the status of the relationship, and the room ID in which the relationship is established.","sidebar":"apiSidebar"},"interfaces/Room":{"id":"interfaces/Room","title":"Interface: Room","description":"Represents a room or conversation context, including its ID and a list of participants.","sidebar":"apiSidebar"},"interfaces/State":{"id":"interfaces/State","title":"Interface: State","description":"Represents the state of the conversation or context in which the agent is operating, including information about users, messages, goals, and other relevant data.","sidebar":"apiSidebar"},"intro":{"id":"intro","title":"intro","description":"","sidebar":"apiSidebar"},"modules":{"id":"modules","title":"eliza","description":"","sidebar":"apiSidebar"},"quickstart":{"id":"quickstart","title":"quickstart","description":"","sidebar":"apiSidebar"},"rooms":{"id":"rooms","title":"Room Model","description":"The \'room model\' represents a physical or virtual space where interactions between agents and users take place.","sidebar":"apiSidebar"},"types/Handler":{"id":"types/Handler","title":"Type alias: Handler","description":"\u01ac Handler AgentRuntime, message State, options? string]: unknown; }) => Promise\\\\","sidebar":"apiSidebar"},"types/Validator":{"id":"types/Validator","title":"Type alias: Validator","description":"\u01ac Validator AgentRuntime, message State) => Promise\\\\","sidebar":"apiSidebar"},"variables/defaultActions":{"id":"variables/defaultActions","title":"Variable: defaultActions","description":"\u2022 Const defaultActions: Action[]","sidebar":"apiSidebar"},"variables/defaultEvaluators":{"id":"variables/defaultEvaluators","title":"Variable: defaultEvaluators","description":"\u2022 Const defaultEvaluators: Evaluator[]","sidebar":"apiSidebar"},"variables/defaultProviders":{"id":"variables/defaultProviders","title":"Variable: defaultProviders","description":"\u2022 Const defaultProviders: Provider[]","sidebar":"apiSidebar"},"variables/embeddingDimension":{"id":"variables/embeddingDimension","title":"Variable: embeddingDimension","description":"\u2022 Const embeddingDimension: 1536","sidebar":"apiSidebar"},"variables/embeddingZeroVector":{"id":"variables/embeddingZeroVector","title":"Variable: embeddingZeroVector","description":"\u2022 Const embeddingZeroVector: any[]","sidebar":"apiSidebar"},"variables/evaluationTemplate":{"id":"variables/evaluationTemplate","title":"Variable: evaluationTemplate","description":"\u2022 Const evaluationTemplate Based on the conversation and conditions, determine which evaluation functions are appropriate to call.\\\\nExamples You are helping me to decide which appropriate functions to call based on the conversation between {} and {{agentName}}.\\\\n\\\\n{{recentMessages}}\\\\n\\\\nEvaluator Functions\\\\n{{evaluatorConditions}}\\\\n\\\\nTASK\\\\n`json\\\\n[\\\\n  \'evaluatorName\',\\\\n  \'evaluatorName\'\\\\n]\\\\n`\\\\n\\\\nYour response must include the JSON block.\\"","sidebar":"apiSidebar"},"variables/messageHandlerTemplate":{"id":"variables/messageHandlerTemplate","title":"Variable: messageHandlerTemplate","description":"\u2022 Const messageHandlerTemplate DO NOT USE THE INFORMATION FROM THE EXAMPLES ABOVE. THE EXAMPLES ARE FOR REFERENCE ONLY.\\\\n\\\\n~~~\\\\n\\\\n# TASK Generate the next message in the scene for {}\\\\n\\\\nResponse format should be formatted in a JSON block like this \\\\\\"{{agentName}}\\\\\\", \\\\\\"content\\\\\\" string }\\\\n`\\\\n\\\\n{{recentMessages}}\\"","sidebar":"apiSidebar"}}}}')}}]);