"use strict";(self.webpackChunkeliza_docs=self.webpackChunkeliza_docs||[]).push([[5006],{6091:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>m,frontMatter:()=>a,metadata:()=>l,toc:()=>o});var i=r(4848),t=r(8453);const a={sidebar_position:3,title:"Providers"},s="Providers",l={id:"core/providers",title:"Providers",description:"Overview",source:"@site/docs/core/providers.md",sourceDirName:"core",slug:"/core/providers",permalink:"/eliza/docs/core/providers",draft:!1,unlisted:!1,editUrl:"https://github.com/ai16z/eliza/tree/main/docs/docs/core/providers.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,title:"Providers"},sidebar:"tutorialSidebar",previous:{title:"Agents",permalink:"/eliza/docs/core/agents"},next:{title:"Actions",permalink:"/eliza/docs/core/actions"}},c={},o=[{value:"Overview",id:"overview",level:2},{value:"Core Provider Types",id:"core-provider-types",level:2},{value:"1. Time Provider",id:"1-time-provider",level:3},{value:"2. Token Provider",id:"2-token-provider",level:3},{value:"3. Wallet Provider",id:"3-wallet-provider",level:3},{value:"4. Boredom Provider",id:"4-boredom-provider",level:3},{value:"Implementation",id:"implementation",level:2},{value:"Provider Interface",id:"provider-interface",level:3},{value:"Data Caching System",id:"data-caching-system",level:3},{value:"Error Handling",id:"error-handling",level:3},{value:"Provider Configuration",id:"provider-configuration",level:2},{value:"Base Settings",id:"base-settings",level:3},{value:"Rate Limiting",id:"rate-limiting",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"1. Data Management",id:"1-data-management",level:3},{value:"2. Performance",id:"2-performance",level:3},{value:"3. Error Handling",id:"3-error-handling",level:3},{value:"4. Security",id:"4-security",level:3},{value:"Integration Examples",id:"integration-examples",level:2},{value:"Combining Multiple Providers",id:"combining-multiple-providers",level:3},{value:"Custom Provider Implementation",id:"custom-provider-implementation",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Common Issues and Solutions",id:"common-issues-and-solutions",level:3},{value:"Additional Resources",id:"additional-resources",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"providers",children:"Providers"})}),"\n",(0,i.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,i.jsx)(n.p,{children:"Providers are core modules that inject dynamic context and real-time information into agent interactions. They serve as a bridge between the agent and various external systems, enabling access to market data, wallet information, sentiment analysis, and temporal context."}),"\n",(0,i.jsx)(n.h2,{id:"core-provider-types",children:"Core Provider Types"}),"\n",(0,i.jsx)(n.h3,{id:"1-time-provider",children:"1. Time Provider"}),"\n",(0,i.jsx)(n.p,{children:"Provides temporal context for agent interactions:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'const timeProvider: Provider = {\n    get: async (_runtime: IAgentRuntime, _message: Memory) => {\n        const currentDate = new Date();\n        const currentTime = currentDate.toLocaleTimeString("en-US");\n        const currentYear = currentDate.getFullYear();\n        return `The current time is: ${currentTime}, ${currentYear}`;\n    }\n};\n'})}),"\n",(0,i.jsx)(n.h3,{id:"2-token-provider",children:"2. Token Provider"}),"\n",(0,i.jsx)(n.p,{children:"Provides comprehensive token analytics and market data:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"interface TokenAnalytics {\n    security: TokenSecurityData;\n    tradeData: TokenTradeData;\n    holderDistribution: string;\n    marketMetrics: {\n        price: number;\n        volume24h: number;\n        priceChange: number;\n    };\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:"Key features:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Real-time price and volume data"}),"\n",(0,i.jsx)(n.li,{children:"Security metrics and risk assessment"}),"\n",(0,i.jsx)(n.li,{children:"Holder distribution analysis"}),"\n",(0,i.jsx)(n.li,{children:"DexScreener integration"}),"\n",(0,i.jsx)(n.li,{children:"Smart caching system"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"3-wallet-provider",children:"3. Wallet Provider"}),"\n",(0,i.jsx)(n.p,{children:"Manages cryptocurrency wallet interactions:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"interface WalletPortfolio {\n    totalUsd: string;\n    totalSol?: string;\n    items: Array<{\n        name: string;\n        symbol: string;\n        balance: string;\n        valueUsd: string;\n        valueSol?: string;\n    }>;\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:"Capabilities:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Portfolio valuation"}),"\n",(0,i.jsx)(n.li,{children:"Token balances"}),"\n",(0,i.jsx)(n.li,{children:"Price tracking"}),"\n",(0,i.jsx)(n.li,{children:"Performance metrics"}),"\n",(0,i.jsx)(n.li,{children:"Multi-currency support"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"4-boredom-provider",children:"4. Boredom Provider"}),"\n",(0,i.jsx)(n.p,{children:"Manages conversation dynamics and engagement:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"interface BoredomLevel {\n    minScore: number;\n    statusMessages: string[];\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:"Features:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Engagement tracking"}),"\n",(0,i.jsx)(n.li,{children:"Conversation flow management"}),"\n",(0,i.jsx)(n.li,{children:"Natural disengagement"}),"\n",(0,i.jsx)(n.li,{children:"Sentiment analysis"}),"\n",(0,i.jsx)(n.li,{children:"Response adaptation"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"implementation",children:"Implementation"}),"\n",(0,i.jsx)(n.h3,{id:"provider-interface",children:"Provider Interface"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"interface Provider {\n    get: (\n        runtime: IAgentRuntime,\n        message: Memory,\n        state?: State\n    ) => Promise<string>;\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"data-caching-system",children:"Data Caching System"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'class CacheManager {\n    private cache: NodeCache;\n    private cacheDir: string;\n\n    constructor(ttl: number = 300) { // 5 minutes default\n        this.cache = new NodeCache({ stdTTL: ttl });\n        this.cacheDir = path.join(__dirname, "cache");\n    }\n\n    async getCachedData<T>(key: string): Promise<T | null> {\n        // Check memory cache\n        const memoryCache = this.cache.get<T>(key);\n        if (memoryCache) return memoryCache;\n\n        // Check file cache\n        return this.readFromFileCache<T>(key);\n    }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"error-handling",children:"Error Handling"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"async function withErrorHandling<T>(\n    operation: () => Promise<T>,\n    fallback: T,\n    retries: number = 3\n): Promise<T> {\n    try {\n        return await operation();\n    } catch (error) {\n        console.error(`Provider error: ${error.message}`);\n        if (retries > 0) {\n            await delay(1000);\n            return withErrorHandling(operation, fallback, retries - 1);\n        }\n        return fallback;\n    }\n}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"provider-configuration",children:"Provider Configuration"}),"\n",(0,i.jsx)(n.h3,{id:"base-settings",children:"Base Settings"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'const PROVIDER_CONFIG = {\n    API_ENDPOINTS: {\n        BIRDEYE: "https://public-api.birdeye.so",\n        DEXSCREENER: "https://api.dexscreener.com/latest/dex",\n        HELIUS: "https://mainnet.helius-rpc.com"\n    },\n    CACHE_TTL: 300, // 5 minutes\n    MAX_RETRIES: 3,\n    RETRY_DELAY: 2000\n};\n'})}),"\n",(0,i.jsx)(n.h3,{id:"rate-limiting",children:"Rate Limiting"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"const rateLimiter = new RateLimit({\n    windowMs: 15 * 60 * 1000, // 15 minutes\n    max: 100 // limit each IP to 100 requests per windowMs\n});\n"})}),"\n",(0,i.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,i.jsx)(n.h3,{id:"1-data-management",children:"1. Data Management"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Implement robust caching strategies"}),"\n",(0,i.jsx)(n.li,{children:"Use appropriate TTL for different data types"}),"\n",(0,i.jsx)(n.li,{children:"Validate data before caching"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"2-performance",children:"2. Performance"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"// Example of optimized data fetching\nasync function fetchDataWithCache<T>(\n    key: string,\n    fetcher: () => Promise<T>\n): Promise<T> {\n    const cached = await cache.get(key);\n    if (cached) return cached;\n    \n    const data = await fetcher();\n    await cache.set(key, data);\n    return data;\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"3-error-handling",children:"3. Error Handling"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Implement retry mechanisms"}),"\n",(0,i.jsx)(n.li,{children:"Provide fallback values"}),"\n",(0,i.jsx)(n.li,{children:"Log errors comprehensively"}),"\n",(0,i.jsx)(n.li,{children:"Handle API timeouts"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"4-security",children:"4. Security"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Validate input parameters"}),"\n",(0,i.jsx)(n.li,{children:"Sanitize returned data"}),"\n",(0,i.jsx)(n.li,{children:"Implement rate limiting"}),"\n",(0,i.jsx)(n.li,{children:"Handle sensitive data appropriately"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"integration-examples",children:"Integration Examples"}),"\n",(0,i.jsx)(n.h3,{id:"combining-multiple-providers",children:"Combining Multiple Providers"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"async function getMarketContext(\n    runtime: IAgentRuntime,\n    message: Memory\n): Promise<string> {\n    const [timeContext, walletInfo, tokenData] = await Promise.all([\n        timeProvider.get(runtime, message),\n        walletProvider.get(runtime, message),\n        tokenProvider.get(runtime, message)\n    ]);\n\n    return formatContext({\n        time: timeContext,\n        wallet: walletInfo,\n        token: tokenData\n    });\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"custom-provider-implementation",children:"Custom Provider Implementation"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"const marketSentimentProvider: Provider = {\n    get: async (runtime: IAgentRuntime, message: Memory) => {\n        const sentiment = await analyzeSentiment(message.content);\n        const marketMetrics = await getMarketMetrics();\n        \n        return formatSentimentResponse(sentiment, marketMetrics);\n    }\n};\n"})}),"\n",(0,i.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,i.jsx)(n.h3,{id:"common-issues-and-solutions",children:"Common Issues and Solutions"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Stale Data"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"// Implement cache invalidation\nconst invalidateCache = async (pattern: string) => {\n    const keys = await cache.keys(pattern);\n    await Promise.all(keys.map(k => cache.del(k)));\n};\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Rate Limiting"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"// Implement backoff strategy\nconst backoff = async (attempt: number) => {\n    const delay = Math.min(1000 * Math.pow(2, attempt), 10000);\n    await new Promise(resolve => setTimeout(resolve, delay));\n};\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"API Failures"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"// Implement fallback data sources\nconst getFallbackData = async () => {\n    // Attempt alternative data sources\n};\n"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"additional-resources",children:"Additional Resources"})]})}function m(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>l});var i=r(6540);const t={},a=i.createContext(t);function s(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);