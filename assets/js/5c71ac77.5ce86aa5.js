"use strict";(self.webpackChunkeliza_docs=self.webpackChunkeliza_docs||[]).push([[5045],{4005:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>x,frontMatter:()=>l,metadata:()=>d,toc:()=>h});var s=r(4848),n=r(8453);const l={id:"MemoryManager",title:"Class: MemoryManager",sidebar_label:"MemoryManager",sidebar_position:0,custom_edit_url:null},i=void 0,d={id:"classes/MemoryManager",title:"Class: MemoryManager",description:"Manage memories in the database.",source:"@site/api/classes/MemoryManager.md",sourceDirName:"classes",slug:"/classes/MemoryManager",permalink:"/eliza/api/classes/MemoryManager",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"MemoryManager",title:"Class: MemoryManager",sidebar_label:"MemoryManager",sidebar_position:0,custom_edit_url:null},sidebar:"apiSidebar",previous:{title:"DatabaseAdapter",permalink:"/eliza/api/classes/DatabaseAdapter"},next:{title:"SqlJsDatabaseAdapter",permalink:"/eliza/api/classes/SqlJsDatabaseAdapter"}},c={},h=[{value:"Constructors",id:"constructors",level:2},{value:"constructor",id:"constructor",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Properties",id:"properties",level:2},{value:"runtime",id:"runtime",level:3},{value:"tableName",id:"tablename",level:3},{value:"Methods",id:"methods",level:2},{value:"addEmbeddingToMemory",id:"addembeddingtomemory",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"countMemories",id:"countmemories",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-2",level:4},{value:"createMemory",id:"creatememory",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-3",level:4},{value:"getCachedEmbeddings",id:"getcachedembeddings",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns-4",level:4},{value:"getMemories",id:"getmemories",level:3},{value:"Parameters",id:"parameters-5",level:4},{value:"Returns",id:"returns-5",level:4},{value:"removeAllMemories",id:"removeallmemories",level:3},{value:"Parameters",id:"parameters-6",level:4},{value:"Returns",id:"returns-6",level:4},{value:"removeMemory",id:"removememory",level:3},{value:"Parameters",id:"parameters-7",level:4},{value:"Returns",id:"returns-7",level:4},{value:"searchMemoriesByEmbedding",id:"searchmemoriesbyembedding",level:3},{value:"Parameters",id:"parameters-8",level:4},{value:"Returns",id:"returns-8",level:4}];function o(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",hr:"hr",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,n.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.p,{children:"Manage memories in the database."}),"\n",(0,s.jsx)(t.h2,{id:"constructors",children:"Constructors"}),"\n",(0,s.jsx)(t.h3,{id:"constructor",children:"constructor"}),"\n",(0,s.jsxs)(t.p,{children:["\u2022 ",(0,s.jsx)(t.strong,{children:"new MemoryManager"}),"(",(0,s.jsx)(t.code,{children:"opts"}),"): ",(0,s.jsx)(t.a,{href:"/eliza/api/classes/MemoryManager",children:(0,s.jsx)(t.code,{children:"MemoryManager"})})]}),"\n",(0,s.jsx)(t.p,{children:"Constructs a new MemoryManager instance."}),"\n",(0,s.jsx)(t.h4,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"opts"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"Object"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Options for the manager."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"opts.runtime"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/eliza/api/classes/AgentRuntime",children:(0,s.jsx)(t.code,{children:"AgentRuntime"})})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"The AgentRuntime instance associated with this manager."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"opts.tableName"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"string"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"The name of the table this manager will operate on."})]})]})]}),"\n",(0,s.jsx)(t.h4,{id:"returns",children:"Returns"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"/eliza/api/classes/MemoryManager",children:(0,s.jsx)(t.code,{children:"MemoryManager"})})}),"\n",(0,s.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,s.jsx)(t.h3,{id:"runtime",children:"runtime"}),"\n",(0,s.jsxs)(t.p,{children:["\u2022 ",(0,s.jsx)(t.strong,{children:"runtime"}),": ",(0,s.jsx)(t.a,{href:"/eliza/api/classes/AgentRuntime",children:(0,s.jsx)(t.code,{children:"AgentRuntime"})})]}),"\n",(0,s.jsx)(t.p,{children:"The AgentRuntime instance associated with this manager."}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h3,{id:"tablename",children:"tableName"}),"\n",(0,s.jsxs)(t.p,{children:["\u2022 ",(0,s.jsx)(t.strong,{children:"tableName"}),": ",(0,s.jsx)(t.code,{children:"string"})]}),"\n",(0,s.jsx)(t.p,{children:"The name of the database table this manager operates on."}),"\n",(0,s.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,s.jsx)(t.h3,{id:"addembeddingtomemory",children:"addEmbeddingToMemory"}),"\n",(0,s.jsxs)(t.p,{children:["\u25b8 ",(0,s.jsx)(t.strong,{children:"addEmbeddingToMemory"}),"(",(0,s.jsx)(t.code,{children:"memory"}),"): ",(0,s.jsx)(t.code,{children:"Promise"}),"<",(0,s.jsx)(t.a,{href:"/eliza/api/interfaces/Memory",children:(0,s.jsx)(t.code,{children:"Memory"})}),">"]}),"\n",(0,s.jsx)(t.p,{children:"Adds an embedding vector to a memory object. If the memory already has an embedding, it is returned as is."}),"\n",(0,s.jsx)(t.h4,{id:"parameters-1",children:"Parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"memory"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/eliza/api/interfaces/Memory",children:(0,s.jsx)(t.code,{children:"Memory"})})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"The memory object to add an embedding to."})]})})]}),"\n",(0,s.jsx)(t.h4,{id:"returns-1",children:"Returns"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"Promise"}),"<",(0,s.jsx)(t.a,{href:"/eliza/api/interfaces/Memory",children:(0,s.jsx)(t.code,{children:"Memory"})}),">"]}),"\n",(0,s.jsx)(t.p,{children:"A Promise resolving to the memory object, potentially updated with an embedding vector."}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h3,{id:"countmemories",children:"countMemories"}),"\n",(0,s.jsxs)(t.p,{children:["\u25b8 ",(0,s.jsx)(t.strong,{children:"countMemories"}),"(",(0,s.jsx)(t.code,{children:"room_id"}),", ",(0,s.jsx)(t.code,{children:"unique?"}),"): ",(0,s.jsx)(t.code,{children:"Promise"}),"<",(0,s.jsx)(t.code,{children:"number"}),">"]}),"\n",(0,s.jsx)(t.p,{children:"Counts the number of memories associated with a set of user IDs, with an option for uniqueness."}),"\n",(0,s.jsx)(t.h4,{id:"parameters-2",children:"Parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Default value"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"room_id"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"`${string}-${string}-${string}-${string}-${string}`"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"undefined"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"The room ID to count memories for."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"unique"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"boolean"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"true"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Whether to count unique memories only."})]})]})]}),"\n",(0,s.jsx)(t.h4,{id:"returns-2",children:"Returns"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"Promise"}),"<",(0,s.jsx)(t.code,{children:"number"}),">"]}),"\n",(0,s.jsx)(t.p,{children:"A Promise resolving to the count of memories."}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h3,{id:"creatememory",children:"createMemory"}),"\n",(0,s.jsxs)(t.p,{children:["\u25b8 ",(0,s.jsx)(t.strong,{children:"createMemory"}),"(",(0,s.jsx)(t.code,{children:"memory"}),", ",(0,s.jsx)(t.code,{children:"unique?"}),"): ",(0,s.jsx)(t.code,{children:"Promise"}),"<",(0,s.jsx)(t.code,{children:"void"}),">"]}),"\n",(0,s.jsx)(t.p,{children:"Creates a new memory in the database, with an option to check for similarity before insertion."}),"\n",(0,s.jsx)(t.h4,{id:"parameters-3",children:"Parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Default value"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"memory"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/eliza/api/interfaces/Memory",children:(0,s.jsx)(t.code,{children:"Memory"})})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"undefined"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"The memory object to create."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"unique"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"boolean"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"false"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Whether to check for similarity before insertion."})]})]})]}),"\n",(0,s.jsx)(t.h4,{id:"returns-3",children:"Returns"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"Promise"}),"<",(0,s.jsx)(t.code,{children:"void"}),">"]}),"\n",(0,s.jsx)(t.p,{children:"A Promise that resolves when the operation completes."}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h3,{id:"getcachedembeddings",children:"getCachedEmbeddings"}),"\n",(0,s.jsxs)(t.p,{children:["\u25b8 ",(0,s.jsx)(t.strong,{children:"getCachedEmbeddings"}),"(",(0,s.jsx)(t.code,{children:"content"}),"): ",(0,s.jsx)(t.code,{children:"Promise"}),"<{ ",(0,s.jsx)(t.code,{children:"embedding"}),": ",(0,s.jsx)(t.code,{children:"number"}),"[] ; ",(0,s.jsx)(t.code,{children:"levenshtein_score"}),": ",(0,s.jsx)(t.code,{children:"number"})," }[]>"]}),"\n",(0,s.jsx)(t.h4,{id:"parameters-4",children:"Parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"content"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"string"})})]})})]}),"\n",(0,s.jsx)(t.h4,{id:"returns-4",children:"Returns"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"Promise"}),"<{ ",(0,s.jsx)(t.code,{children:"embedding"}),": ",(0,s.jsx)(t.code,{children:"number"}),"[] ; ",(0,s.jsx)(t.code,{children:"levenshtein_score"}),": ",(0,s.jsx)(t.code,{children:"number"})," }[]>"]}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h3,{id:"getmemories",children:"getMemories"}),"\n",(0,s.jsxs)(t.p,{children:["\u25b8 ",(0,s.jsx)(t.strong,{children:"getMemories"}),"(",(0,s.jsx)(t.code,{children:"opts"}),"): ",(0,s.jsx)(t.code,{children:"Promise"}),"<",(0,s.jsx)(t.a,{href:"/eliza/api/interfaces/Memory",children:(0,s.jsx)(t.code,{children:"Memory"})}),"[]>"]}),"\n",(0,s.jsx)(t.p,{children:"Retrieves a list of memories by user IDs, with optional deduplication."}),"\n",(0,s.jsx)(t.h4,{id:"parameters-5",children:"Parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Default value"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"opts"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"Object"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"undefined"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Options including user IDs, count, and uniqueness."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"opts.count?"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"number"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"10"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"The number of memories to retrieve."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"opts.room_id"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"`${string}-${string}-${string}-${string}-${string}`"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"undefined"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"The room ID to retrieve memories for."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"opts.unique?"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"boolean"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"true"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Whether to retrieve unique memories only."})]})]})]}),"\n",(0,s.jsx)(t.h4,{id:"returns-5",children:"Returns"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"Promise"}),"<",(0,s.jsx)(t.a,{href:"/eliza/api/interfaces/Memory",children:(0,s.jsx)(t.code,{children:"Memory"})}),"[]>"]}),"\n",(0,s.jsx)(t.p,{children:"A Promise resolving to an array of Memory objects."}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h3,{id:"removeallmemories",children:"removeAllMemories"}),"\n",(0,s.jsxs)(t.p,{children:["\u25b8 ",(0,s.jsx)(t.strong,{children:"removeAllMemories"}),"(",(0,s.jsx)(t.code,{children:"room_id"}),"): ",(0,s.jsx)(t.code,{children:"Promise"}),"<",(0,s.jsx)(t.code,{children:"void"}),">"]}),"\n",(0,s.jsx)(t.p,{children:"Removes all memories associated with a set of user IDs."}),"\n",(0,s.jsx)(t.h4,{id:"parameters-6",children:"Parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"room_id"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"`${string}-${string}-${string}-${string}-${string}`"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"The room ID to remove memories for."})]})})]}),"\n",(0,s.jsx)(t.h4,{id:"returns-6",children:"Returns"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"Promise"}),"<",(0,s.jsx)(t.code,{children:"void"}),">"]}),"\n",(0,s.jsx)(t.p,{children:"A Promise that resolves when the operation completes."}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h3,{id:"removememory",children:"removeMemory"}),"\n",(0,s.jsxs)(t.p,{children:["\u25b8 ",(0,s.jsx)(t.strong,{children:"removeMemory"}),"(",(0,s.jsx)(t.code,{children:"memoryId"}),"): ",(0,s.jsx)(t.code,{children:"Promise"}),"<",(0,s.jsx)(t.code,{children:"void"}),">"]}),"\n",(0,s.jsx)(t.p,{children:"Removes a memory from the database by its ID."}),"\n",(0,s.jsx)(t.h4,{id:"parameters-7",children:"Parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"memoryId"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"`${string}-${string}-${string}-${string}-${string}`"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"The ID of the memory to remove."})]})})]}),"\n",(0,s.jsx)(t.h4,{id:"returns-7",children:"Returns"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"Promise"}),"<",(0,s.jsx)(t.code,{children:"void"}),">"]}),"\n",(0,s.jsx)(t.p,{children:"A Promise that resolves when the operation completes."}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h3,{id:"searchmemoriesbyembedding",children:"searchMemoriesByEmbedding"}),"\n",(0,s.jsxs)(t.p,{children:["\u25b8 ",(0,s.jsx)(t.strong,{children:"searchMemoriesByEmbedding"}),"(",(0,s.jsx)(t.code,{children:"embedding"}),", ",(0,s.jsx)(t.code,{children:"opts"}),"): ",(0,s.jsx)(t.code,{children:"Promise"}),"<",(0,s.jsx)(t.a,{href:"/eliza/api/interfaces/Memory",children:(0,s.jsx)(t.code,{children:"Memory"})}),"[]>"]}),"\n",(0,s.jsx)(t.p,{children:"Searches for memories similar to a given embedding vector."}),"\n",(0,s.jsx)(t.h4,{id:"parameters-8",children:"Parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"embedding"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.code,{children:"number"}),"[]"]}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"The embedding vector to search with."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"opts"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"Object"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Options including match threshold, count, user IDs, and uniqueness."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"opts.count?"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"number"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"The maximum number of memories to retrieve."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"opts.match_threshold?"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"number"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"The similarity threshold for matching memories."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"opts.room_id"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"`${string}-${string}-${string}-${string}-${string}`"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"The room ID to retrieve memories for."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"opts.unique?"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"boolean"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Whether to retrieve unique memories only."})]})]})]}),"\n",(0,s.jsx)(t.h4,{id:"returns-8",children:"Returns"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"Promise"}),"<",(0,s.jsx)(t.a,{href:"/eliza/api/interfaces/Memory",children:(0,s.jsx)(t.code,{children:"Memory"})}),"[]>"]}),"\n",(0,s.jsx)(t.p,{children:"A Promise resolving to an array of Memory objects that match the embedding."})]})}function x(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},8453:(e,t,r)=>{r.d(t,{R:()=>i,x:()=>d});var s=r(6540);const n={},l=s.createContext(n);function i(e){const t=s.useContext(l);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),s.createElement(l.Provider,{value:t},e.children)}}}]);